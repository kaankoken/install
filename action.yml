name: cargo install
author: David Tolnay
description: Fast `cargo install` action using a GitHub-based binary cache
inputs:
  crate:
    description: Name of crate as published to crates.io
    required: true
  bin:
    description: Name of binary; default = same as crate name
    required: false
runs:
  using: composite
  steps:
    - name: Determine cargo bin directory
      run: echo "dir=$(dirname $(which cargo))" >> $GITHUB_OUTPUT
      shell: bash
      id: cargo

    - name: Set local variables
      id: vars
      shell: bash
      run: |
        echo "primary_url=https://github.com/kaankoken/install/releases/download/${{ inputs.crate }}/${{ inputs.bin || inputs.crate }}" >> $GITHUB_OUTPUT
        echo "secondary_url=https://github.com/dtolnay/install/releases/download/${{ inputs.crate }}/${{ inputs.bin || inputs.crate }}" >> $GITHUB_OUTPUT
        echo "binary=${{ inputs.bin || inputs.crate }}" >> $GITHUB_OUTPUT
        echo "first_path=${{ steps.cargo.outputs.dir }}/${{ inputs.bin || inputs.crate }}" >> $GITHUB_OUTPUT
        echo "second_path=${{ runner.temp }}/${{ inputs.bin || inputs.crate }}.sig"

    - name: Download ${{steps.vars.outputs.binary}}
      run: |
        if curl --output "${{ steps.vars.outputs.first_path }}" "${{ steps.vars.outputs.primary_url }}" --location --silent --show-error --fail --retry 5
        then
          echo "Fetching data from primary URL..."
        else
          echo "Primary URL request failed. Falling back to secondary URL..."
          curl --output "${{ steps.vars.outputs.first_path }}" "${{ steps.vars.outputs.secondary_url }}" --location --silent --show-error --fail --retry 5
        fi
      shell: bash

    - name: Download ${{steps.vars.outputs.binary}}.sig
      run: |
        if curl --output "${{ steps.vars.outputs.second_path }}" "${{ steps.vars.outputs.primary_url }}.sig" --location --silent --show-error --fail --retry 5
        then
          echo "Fetching data from primary URL..."
        else
          echo "Primary URL request failed. Falling back to secondary URL..."
          curl --output "${{ steps.vars.outputs.second_path }}" "${{ steps.vars.outputs.secondary_url }}.sig" --location --silent --show-error --fail --retry 5
        fi
      shell: bash

    - name: Retrieve public key of signing key
      run: gpg --output ${{ runner.temp }}/signing-key.gpg --yes --dearmor ${{ github.action_path }}/signing-key.asc
      shell: bash

    - name: Verify gpg signature
      run: gpg --no-default-keyring --keyring ${{ runner.temp }}/signing-key.gpg --trusted-key 830334D6A6010C41 --verify "${{ steps.vars.outputs.second_path }}" "${{ steps.vars.outputs.first_path }}"
      shell: bash

    - name: Set executable bit
      run: chmod +x ${{ steps.cargo.outputs.dir }}/${{ steps.vars.outputs.binary }}
      shell: bash
